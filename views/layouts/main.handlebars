{{!-- views/layouts/main.handlebars --}}

<!DOCTYPE html>
  <head>
    <title>My Blog</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Anton&family=Work+Sans:wght@300;400;700&display=swap" rel="stylesheet"> 
    
    <link rel="stylesheet" href="../css/style.css">
  </head>

  <body>
    {{> nav }}
    <main>
        
        {{{body}}}
        
        <script>
            function adjustUnderline(underline){
                // underline.style.width = underline.previousElementSibling.getElementsByTagName("h1")[0].innerHTML.offsetWidth + "px";
                underline.style.width = getTextWidth(underline.previousElementSibling.getElementsByTagName("h1")[0].innerHTML, "bold 2rem Anton") + "px";
            }

            /**
            * Uses canvas.measureText to compute and return the width of the given text of given font in pixels.
            * 
            * @param {String} text The text to be rendered.
            * @param {String} font The css font descriptor that text is to be rendered with (e.g. "bold 14px verdana").
            * 
            * @see https://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393
            */
            function getTextWidth(text, font) {
                // re-use canvas object for better performance
                var canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement("canvas"));
                var context = canvas.getContext("2d");
                context.font = font;
                var metrics = context.measureText(text);
                return metrics.width;
            }

            console.log(getTextWidth("hello there!", "bold 12pt arial"));  // close to 86


            window.addEventListener('DOMContentLoaded', () => {
                let underlines = document.getElementsByClassName("h1-underline");
                for(i = 0; i < underlines.length; i++){
                    adjustUnderline(underlines[i]);
                }
            });
        </script>
    </main>
    {{> footer }}
  </body>
</html>